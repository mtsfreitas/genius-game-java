/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package genius.view;

import genius.model.Jogo;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author Martins
 */
public class Janela extends javax.swing.JFrame {
    
    public static int PEGA_COR_BOTAO = -1;
    Jogo jogo = new Jogo();
    private TarefaSegundoPlanoExecucaoGeral tarefaSegundoPlanoExecucaoGeral;
    
    /**
     * Creates new form Janela
     */
    public Janela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        telaWhite = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SpinnerCores = new javax.swing.JSpinner();
        telaRed = new javax.swing.JLabel();
        telaAzul = new javax.swing.JLabel();
        telaYellow = new javax.swing.JLabel();
        telaGreen = new javax.swing.JLabel();
        botaoSair = new javax.swing.JLabel();
        botaoJogar = new javax.swing.JLabel();
        TelaClicada = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogo");
        setUndecorated(true);

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.setLayout(null);
        jPanel1.add(telaWhite);
        telaWhite.setBounds(320, 220, 150, 160);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Sequência: ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 540, 110, 40);

        SpinnerCores.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));
        SpinnerCores.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 153), 3, true));
        jPanel1.add(SpinnerCores);
        SpinnerCores.setBounds(140, 540, 60, 30);

        telaRed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                telaRedMousePressed(evt);
            }
        });
        jPanel1.add(telaRed);
        telaRed.setBounds(220, 130, 180, 170);

        telaAzul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                telaAzulMousePressed(evt);
            }
        });
        jPanel1.add(telaAzul);
        telaAzul.setBounds(400, 120, 180, 180);

        telaYellow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                telaYellowMousePressed(evt);
            }
        });
        jPanel1.add(telaYellow);
        telaYellow.setBounds(400, 300, 200, 170);

        telaGreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                telaGreenMousePressed(evt);
            }
        });
        jPanel1.add(telaGreen);
        telaGreen.setBounds(190, 300, 210, 180);

        botaoSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoSairMouseClicked(evt);
            }
        });
        jPanel1.add(botaoSair);
        botaoSair.setBounds(30, 30, 70, 70);

        botaoJogar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoJogarMouseClicked(evt);
            }
        });
        jPanel1.add(botaoJogar);
        botaoJogar.setBounds(590, 520, 180, 70);
        jPanel1.add(TelaClicada);
        TelaClicada.setBounds(0, 0, 790, 600);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tela_inicial.jpg"))); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 0, 790, 600);

        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 790, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoSairMouseClicked
        JOptionPane.showMessageDialog(null, "Obrigado por jogar! :)\n\nAtividade 4 - CCF 313F\nTrabalho Prático – Jogo de Memória Genius\n\nMatheus Freitas Martins - 3031", "Agradecimentos", JOptionPane.WARNING_MESSAGE);
        this.dispose();
    }//GEN-LAST:event_botaoSairMouseClicked

    private void botaoJogarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoJogarMouseClicked
        if(tarefaSegundoPlanoExecucaoGeral != null && !tarefaSegundoPlanoExecucaoGeral.isDone()){
            return;
        }
        
        tarefaSegundoPlanoExecucaoGeral = new TarefaSegundoPlanoExecucaoGeral();        
//        tarefaSegundoPlanoExecucaoGeral.addPropertyChangeListener(new PropertyChangeListener() {
//            @Override
//            public void propertyChange(PropertyChangeEvent evt) {
////                if("progress".equals(evt.getPropertyName())){
////                    barraProgresso.setValue((Integer) evt.getNewValue());
////                }
//            }            
//        });        
        tarefaSegundoPlanoExecucaoGeral.execute();
        
        
    }//GEN-LAST:event_botaoJogarMouseClicked

    protected class TarefaSegundoPlanoExecucaoGeral extends SwingWorker<String, String>{

        boolean comecar = false;
        
        @Override
        protected String doInBackground() throws Exception {
            telaRed.setVisible(false);
            telaGreen.setVisible(false);
            telaAzul.setVisible(false);
            telaYellow.setVisible(false);
         // telaWhite.setVisible(false);//////////////////////////////////////////////////////////
            comecar = false;
            //JOGO COMEÇA AQUI
            jogo = new Jogo((Integer) SpinnerCores.getValue());
            ImageIcon ico = new ImageIcon(getClass().getResource("/img/tela_inicial.jpg"));
            TelaClicada.setIcon(ico);
            
            ArrayList<Integer> cores = jogo.getCores();
         
            for(Integer cor : cores)
                 System.out.println(cor); System.out.println("___");            
                 
            for(Integer cor : cores){
                publish(cor + "");
                Thread.sleep(Jogo.VELOCIDADE_PISCA);
                TelaClicada.setIcon(ico);
                Thread.sleep(100);
            }
            comecar = true;
            return "1";
        }

        @Override
        protected void done() {
            if(comecar){
                telaRed.setVisible(true);
                telaGreen.setVisible(true);
                telaAzul.setVisible(true);
                telaYellow.setVisible(true);
               // telaWhite.setVisible(true); ///////////////////////////////////////////////////////////////////////////

                int op = JOptionPane.showConfirmDialog(null, "Sua vez!\n(Clique SIM para iniciar)", "HORA DE JOGAR!", JOptionPane.OK_OPTION);
                if(op == JOptionPane.OK_OPTION){
                    TarefaSegundoPlanoEsperaUsuario tarefaSegundoPlanoEsperaUsuario = new TarefaSegundoPlanoEsperaUsuario();
                    tarefaSegundoPlanoEsperaUsuario.execute();
                }
            }
            
            super.done(); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        protected void process(List<String> chunks) {
            int cor = Integer.parseInt(chunks.get(0));
            ImageIcon ico = null;
            switch(cor)
            {
               case 0:  ico = new ImageIcon(getClass().getResource("/img/tela_red.jpg")); break;
               case 1:  ico = new ImageIcon(getClass().getResource("/img/tela_blue.jpg")); break;
               case 2:  ico = new ImageIcon(getClass().getResource("/img/tela_yellow.jpg")); break;
               case 3:  ico = new ImageIcon(getClass().getResource("/img/tela_green.jpg")); break;
           //  case 4:  ico = new ImageIcon(getClass().getResource("/img/tela_white.jpg")); break; /////////////////////////////////////////
            }
            if(ico != null)
                TelaClicada.setIcon(ico);
            else
                System.out.println("ICO é null!");
            
            super.process(chunks); //To change body of generated methods, choose Tools | Templates.
        }
        
    } 
    
    protected class TarefaSegundoPlanoEsperaUsuario extends SwingWorker<String, String>{

        private final long MAX_TEMPO_ESPERA = 5000;
        int qtd_cores_selecionadas = 0;
        long t_inicio, t_fim;
        int flag_resposta = 0;
        
        
        @Override
        protected String doInBackground() throws Exception {
            int qtd_max_cores_acertos = jogo.getQtdCoresAcertos();
            qtd_cores_selecionadas = 0;
            flag_resposta = 0;
            if(telaRed.getMouseListeners().length > 0) telaRed.removeMouseListener(telaRed.getMouseListeners()[0]);
            if(telaAzul.getMouseListeners().length > 0) telaAzul.removeMouseListener(telaAzul.getMouseListeners()[0]);
            if(telaYellow.getMouseListeners().length > 0) telaYellow.removeMouseListener(telaYellow.getMouseListeners()[0]);
            if(telaGreen.getMouseListeners().length > 0) telaGreen.removeMouseListener(telaGreen.getMouseListeners()[0]);
            //if(telaWhite.getMouseListeners().length > 0) telaWhite.removeMouseListener(telaWhite.getMouseListeners()[0]); /////////////////////////////////////////////////////////
            
            t_inicio = System.currentTimeMillis();
            t_fim = t_inicio;
            
            telaRed.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    t_inicio = System.currentTimeMillis();
                    qtd_cores_selecionadas = preencheVetor(Jogo.BOTAO_RED);                                        
                }

                @Override
                public void mouseReleased(MouseEvent e) {                    
                    TelaClicada.setIcon(new ImageIcon(getClass().getResource("/img/tela_inicial.jpg")));
                }
            });
            
            telaAzul.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    t_inicio = System.currentTimeMillis();
                    qtd_cores_selecionadas = preencheVetor(Jogo.BOTAO_AZUL);
                }
                
                @Override
                public void mouseReleased(MouseEvent e) {                    
                    TelaClicada.setIcon(new ImageIcon(getClass().getResource("/img/tela_inicial.jpg")));
                }
            });
            
            telaYellow.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    t_inicio = System.currentTimeMillis();
                    qtd_cores_selecionadas = preencheVetor(Jogo.BOTAO_YELLOW);
                }
                
                @Override
                public void mouseReleased(MouseEvent e) {                    
                    TelaClicada.setIcon(new ImageIcon(getClass().getResource("/img/tela_inicial.jpg")));
                }
            });            
            
            telaGreen.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    t_inicio = System.currentTimeMillis();
                    qtd_cores_selecionadas = preencheVetor(Jogo.BOTAO_GREEN);
                }
                
                @Override
                public void mouseReleased(MouseEvent e) {                    
                    TelaClicada.setIcon(new ImageIcon(getClass().getResource("/img/tela_inicial.jpg")));
                }
            });
            ///////////////////////////////////////////////////////////////////////////////////////////////////////
//             telaWhite.addMouseListener(new java.awt.event.MouseAdapter() {
//                @Override
//                public void mousePressed(java.awt.event.MouseEvent evt) {
//                    t_inicio = System.currentTimeMillis();
//                    qtd_cores_selecionadas = preencheVetor(Jogo.BOTAO_WHITE);
//                }
//                
//                @Override
//                public void mouseReleased(MouseEvent e) {                    
//                    TelaClicada.setIcon(new ImageIcon(getClass().getResource("/img/tela_inicial.jpg")));
//                }
//            });
            //////////////////////////////////////////////////////////////////////////////////////////////////////
            while(qtd_cores_selecionadas < qtd_max_cores_acertos && (t_fim - t_inicio) < MAX_TEMPO_ESPERA){                                        
                t_fim = System.currentTimeMillis();    
                Thread.sleep(50);
                if(jogo.checaAcertoIndividual() == false){
                    flag_resposta = 1;
                    break;                
                }
            }
            
            return "1";
        }

        @Override
        protected void done() {
            if(telaRed.getMouseListeners().length > 0) telaRed.removeMouseListener(telaRed.getMouseListeners()[0]);
            if(telaAzul.getMouseListeners().length > 0) telaAzul.removeMouseListener(telaAzul.getMouseListeners()[0]);
            if(telaYellow.getMouseListeners().length > 0) telaYellow.removeMouseListener(telaYellow.getMouseListeners()[0]);
            if(telaGreen.getMouseListeners().length > 0) telaGreen.removeMouseListener(telaGreen.getMouseListeners()[0]);
            //if(telaWhite.getMouseListeners().length > 0) telaWhite.removeMouseListener(telaWhite.getMouseListeners()[0]);//////////////////////////////////////////////////////////
            TelaClicada.setIcon(new ImageIcon(getClass().getResource("/img/tela_inicial.jpg")));
            if(jogo.checaAcerto()){
                JOptionPane.showMessageDialog(null, "Parabéns, você acertou todas! :)");
            } else{
                if(flag_resposta == 0)
                    JOptionPane.showMessageDialog(null, "Tempo espirado");
                else
                    JOptionPane.showMessageDialog(null, "Você errou :(", "PERDEU", JOptionPane.ERROR_MESSAGE);
            }
            super.done(); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        protected void process(List<String> chunks) {
            int cor = Integer.parseInt(chunks.get(0));
            ImageIcon ico = null;
            switch(cor)
            {
               case 0:  ico = new ImageIcon(getClass().getResource("/img/tela_red.jpg")); break;
               case 1:  ico = new ImageIcon(getClass().getResource("/img/tela_blue.jpg")); break;
               case 2:  ico = new ImageIcon(getClass().getResource("/img/tela_yellow.jpg")); break;
               case 3:  ico = new ImageIcon(getClass().getResource("/img/tela_green.jpg")); break;
           //    case 4:  ico = new ImageIcon(getClass().getResource("/img/tela_white.jpg")); break;////////////////////////////////////////////
            }
            if(ico != null)
                TelaClicada.setIcon(ico);
            else
                System.out.println("ICO é null!");
            
            super.process(chunks); //To change body of generated methods, choose Tools | Templates.
        }
        
        private int preencheVetor(int k){
            ImageIcon ico;
            switch(k){
                case Jogo.BOTAO_RED: 
                    ico = new ImageIcon(getClass().getResource("/img/tela_red.jpg"));
                    break;
                case Jogo.BOTAO_AZUL:
                    ico = new ImageIcon(getClass().getResource("/img/tela_blue.jpg"));
                    break;
                case Jogo.BOTAO_YELLOW:
                    ico = new ImageIcon(getClass().getResource("/img/tela_yellow.jpg"));
                    break;
                case Jogo.BOTAO_GREEN: 
                default:
                     ico = new ImageIcon(getClass().getResource("/img/tela_green.jpg"));
                
            }
            TelaClicada.setIcon(ico);

            return jogo.preencheVetor(k);
        }
    } 
    
    private void telaRedMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telaRedMousePressed
        //preencheVetor(Jogo.BOTAO_RED);
    }//GEN-LAST:event_telaRedMousePressed

    private void telaAzulMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telaAzulMousePressed
//        preencheVetor(Jogo.BOTAO_AZUL);     
    }//GEN-LAST:event_telaAzulMousePressed

    private void telaYellowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telaYellowMousePressed
//        preencheVetor(Jogo.BOTAO_YELLOW);
    }//GEN-LAST:event_telaYellowMousePressed

    private void telaGreenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telaGreenMousePressed
//        preencheVetor(Jogo.BOTAO_GREEN);
    }//GEN-LAST:event_telaGreenMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Janela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner SpinnerCores;
    private javax.swing.JLabel TelaClicada;
    private javax.swing.JLabel botaoJogar;
    private javax.swing.JLabel botaoSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel telaAzul;
    private javax.swing.JLabel telaGreen;
    private javax.swing.JLabel telaRed;
    private javax.swing.JLabel telaWhite;
    private javax.swing.JLabel telaYellow;
    // End of variables declaration//GEN-END:variables
}
